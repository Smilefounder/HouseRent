// <auto-generated />
using HouseRent.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HouseRent.Migrations
{
    [DbContext(typeof(HouseRentContext))]
    partial class HouseRentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HouseRent.Models.Advertise", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<string>("FlatDetails")
                        .IsRequired();

                    b.Property<decimal>("FlatSize");

                    b.Property<string>("FlatType")
                        .IsRequired();

                    b.Property<string>("Heading");

                    b.Property<decimal>("OtherBill");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<DateTime>("PostTime");

                    b.Property<decimal>("Rent");

                    b.Property<DateTime>("RentDate");

                    b.Property<string>("UserMail");

                    b.Property<decimal>("UtilitiesBill");

                    b.Property<string>("YoutubeLink")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Advertise");
                });

            modelBuilder.Entity("HouseRent.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdvertiseID");

                    b.Property<bool>("Anonymous");

                    b.Property<string>("CommentText");

                    b.Property<DateTime>("CommentTime");

                    b.Property<string>("Commenter");

                    b.HasKey("ID");

                    b.HasIndex("AdvertiseID");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("HouseRent.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdvertiseID");

                    b.Property<byte[]>("FlatImage");

                    b.HasKey("ID");

                    b.HasIndex("AdvertiseID");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("HouseRent.Models.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdvertiseID");

                    b.Property<int>("ReviewStar");

                    b.Property<string>("Reviewer");

                    b.HasKey("ID");

                    b.HasIndex("AdvertiseID");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("HouseRent.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<byte[]>("Avatar");

                    b.Property<string>("Contact")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Role");

                    b.HasKey("ID");

                    b.HasAlternateKey("Email")
                        .HasName("AlternateKey_Email");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HouseRent.Models.Comment", b =>
                {
                    b.HasOne("HouseRent.Models.Advertise")
                        .WithMany("Comments")
                        .HasForeignKey("AdvertiseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HouseRent.Models.Image", b =>
                {
                    b.HasOne("HouseRent.Models.Advertise")
                        .WithMany("Images")
                        .HasForeignKey("AdvertiseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HouseRent.Models.Review", b =>
                {
                    b.HasOne("HouseRent.Models.Advertise")
                        .WithMany("Reviews")
                        .HasForeignKey("AdvertiseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
